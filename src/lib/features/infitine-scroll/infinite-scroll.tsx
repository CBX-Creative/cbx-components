import * as React from 'react';import { PropsWithChildren } from 'react';import { useInfiniteScroll } from '@/lib/features/infitine-scroll/use-infinite-scroll';import { cn } from '@/lib/utils';import '@/index.css';export type InfiniteScrollProps = PropsWithChildren & {	direction: 'horizontal' | 'vertical';	speed: number;	instances: number;};export const CBXInfiniteScroll: React.FC<InfiniteScrollProps> = ({	direction = 'horizontal',	speed = 30,	instances = 2,	children,}) => {	const { outerRef, innerRef } = useInfiniteScroll();	return (		<div ref={outerRef} className={`w-full max-w-[unset] overflow-hidden`}>			<div				ref={innerRef}				className={cn(					`box-border flex w-max max-w-[unset] animate-none justify-center overflow-x-hidden`,					direction === 'horizontal'						? '[&[data-animate=true]]:animate-infinite-scroll-horizontal'						: '[&[data-animate=true]]:animate-infinite-scroll-vertical',				)}				style={{					animationDuration: `${speed}s`,				}}			>				{[...Array(instances)].map((_, ind) => (					<div key={ind}>{children}</div>				))}			</div>		</div>	);};